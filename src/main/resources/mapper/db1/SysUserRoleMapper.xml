<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjr.mapper.db1.SysUserRoleMapper">
    <resultMap id="BaseResultMap" type="com.linjr.entity.db1.SysUserRole">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, role_id, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from sys_user_role
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.linjr.entity.db1.SysUserRole">
        insert into sys_user_role (id, user_id, role_id,
        create_time)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.linjr.entity.db1.SysUserRole">
        insert into sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.linjr.entity.db1.SysUserRole">
        update sys_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.linjr.entity.db1.SysUserRole">
        update sys_user_role
        set user_id = #{userId,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--通过用户ID查询关联角色-->
    <select id="getRoleIdsByUserId" resultType="java.lang.String">
        select role_id
        from sys_user_role
        where user_id=#{userId}
    </select>

    <!--删除该用户关联角色-->
    <delete id="batchRemoveRoleByUserId">
        delete
        from sys_user_role
        where user_id=#{userId}
    </delete>

    <!--批量插入关联数据-->
    <insert id="batchInsertUserRole" parameterType="com.linjr.entity.db1.SysUserRole">
        insert into sys_user_role(
        id,
        user_id,
        role_id,
        create_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.userId},
            #{item.roleId},
            #{item.createTime}
            )
        </foreach>
    </insert>
    <!--通过角色ID集合查找用户ID集合-->
    <select id="getUserIdByRoleIds" resultType="java.lang.String">
        select user_id
        from sys_user_role
        where role_id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <!--通过id查找关联用户ID集合-->
    <select id="getUserIdByRoleId" resultType="java.lang.String">
        select user_id
        from sys_user_role
        where role_id=#{roleId}
    </select>
    <!-- 删除和该角色关联的用户数据 -->
    <delete id="removeByRoleId">
        delete
        from sys_user_role
        where role_id=#{roleId}
    </delete>
</mapper>